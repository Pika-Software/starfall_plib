--@name chip_ban
--@author PrikolMen:-b
--@includedir starfall_plib
--@server

--[[-----------------
    Configuration
-----------------]]--
local CHAT_COMMAND = '/pcban'
local CHAT_COMMAND2 = '/pupcban'

--[[-----------------
         Code
-----------------]]--
dofile( 'starfall_plib/init.txt' )
local chipName = 'PLib - Chip Ban'
local pcall = pcall
local plib = plib
local hook = hook
local NULL = NULL

local banList = {}

plib.ChatCommandAdd(CHAT_COMMAND, function( pl, _, __, nickName )
    if !plib.IsOwner( pl ) then return end
    local plys = find.playersByName( nickName )
    if (plys) then
        local target = find.closest( plys, pl:getPos() )
        if isValid( target ) then
            banList[ target:getSteamID()] = NULL
            plib.Log( chipName, 'Chip Banned: ' .. target:getName() )
        end
    end
end)

plib.ChatCommandAdd(CHAT_COMMAND2, function( pl, _, __, nickName )
    if !plib.IsOwner( pl ) then return end
    local plys = find.playersByName( nickName )
    if (plys) then
        local target = find.closest( plys, pl:getPos() )
        if isValid( target ) then
            banList[ target:getSteamID()] = nil
            plib.Log( chipName, 'Chip unbanned: ' .. target:getName() )
        end
    end
end)

hook.add('think', chipName, function()
    for steamid, entity in pairs( banList ) do
        local ply = find.playerBySteamID( steamid )
        if ply and ply:isValid() and ply:isAlive() then
            if entity:isValid() then
                entity:setPos( ply:getEyePos() )
                entity:setCollisionGroup( 15 )
                entity:setNoDraw( true )
            else
                banList[ steamid ] = prop.create( ply:getEyePos(), ply:getEyeAngles(), "models/hunter/blocks/cube1x1x1.mdl" )
            end
        elseif entity:isValid() then
            entity:remove()
        end
    end
end)