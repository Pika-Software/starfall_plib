--@name Dash
--@author PrikolMen:-b
--@includedir starfall_plib
--@server

--[[-----------------
    Configuration
-----------------]]--

local PRESS_DELAY = 0.25
local DELAY = 0.2
local FORCE = 512

--[[-----------------
         Code
-----------------]]--
dofile( "starfall_plib/init.txt" )
local plib = plib

local directions = {
    -- Jump
    [2] = function( ang, ply )
        return ang:getUp()
    end,
    -- W
    [8] = function( ang )
        return ang:getForward() * 2
    end,
    -- A
    [512] = function( ang )
        return -ang:getRight()
    end,
    -- S
    [16] = function( ang )
        return -ang:getForward()
    end,
    -- D
    [1024] = function( ang )
        return ang:getRight()
    end
}

local delays = {}
local dashes = {}

hook.add( "KeyPress", "Dash - Key Capture", function( ply, key )
    if not plib.IsOwner( ply ) then return end

    if key == 4 and not ply:isOnGround() then
        ply:setVelocity( -ply:getVelocity() - ply:getAngles():getUp() * 2 * FORCE )
        return
    end

    local func = directions[ key ]
    if not func then return end

    local time = CurTime()

    local lastDash = dashes[ key ]
    dashes[ key ] = time

    if not lastDash or ( time - lastDash ) > PRESS_DELAY then return end

    local nextDash = delays[ key ]
    if nextDash and nextDash > time then return end
    delays[ key ] = time + DELAY

    local dir = func( ply:getAngles(), ply )
    if not dir then return end

    ply:setVelocity( dir * FORCE )
end )